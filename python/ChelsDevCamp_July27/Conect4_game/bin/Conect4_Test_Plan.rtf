{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green14\blue47;\red0\green61\blue204;\red217\green11\blue0;
\red133\green0\blue175;\red160\green114\blue253;}
\margl1440\margr1440\vieww12000\viewh16500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf2 Class\
\cf3 Function\
\cf4 Test\
\cf5 Finished test\
\cf0 What function does\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs26 \cf2 Model\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf3 	make_board\
		\cf0 takes the list grid and makes a list of indexes to hold player moves\
			\cf4 Print empty list\
			Append item to list\
			Append a row\
			Append full board
\fs26 \cf2 \
	
\fs24 \cf3 change_board\
		\cf0 takes the board make_board made and updates it with each player move\
			\cf4 Change index\cf3 \
	swap_player\
		\cf0 adds and subtracts the value of current_player based on it\'92s current value\
			\cf4 Change to player_a\
			Change to player_b\cf2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs26 \cf2 View\
	
\fs24 \cf3 starting_print\
		\cf0 displays rules for game\
			\cf4 See if it prints\cf3 \
	show_board\
		\cf0 receives updated board from main\
		Takes in board list and converts it to make it look pretty\
			\cf4 Print when board is empty\
			Print when board is full\
			Print when board half full\cf3 \
	show_turn\
		\cf0 asks for input from user\
			\cf4 See if it\'92s int\
			See if its string\
			See if mix(Upper/lower, int/string)\
			See if upper\
			See if lower\
			Empty string\cf3 \
	show_invalid\
		\cf0 receives info from changed_board\
			\cf4 See if it print the right thing for what kind of invalid it is\
\
	\cf3 show_status\
		\cf0 displays one of multi thing(If someone won, if it\'92s a tie, invalid Keyboard, invalid move)\
			\cf4 See if current status variable changes and if correct variable prints\cf2 \
\

\fs26 Controller\
	
\fs24 \cf3 main\
		\cf0 controls the flow of the game\
		calls check_winner\
		calls check_tie\
		calls get_move\
		calls check_valid\
		calls get_changed_board\cf3 \
		\cf0 calls show_board in view\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf3 \
	check_winner\
		\cf0 looks at user input and sees if player got four in a row\
		if player got four in a row it updates and calls show_status and exits\
			\cf4 Check if given a winner variable will equal winner\cf0 \
			\
		\
	\cf3 \
	check_tie\
		\cf0 from last board status see\'92s if board is full or not\
		if full calls show_tie and exits\
			\cf4 Check if given a Tie variable will equal tie\
			\cf0 \
						\cf6 Make board status full and see if it prints and exits\
						Make board status full with a four in a row\
						Make board status not full\cf0 \
\
\cf3 	get_move\
		\cf0 call show_turn\
		call swap-player\
\cf3 \
	check_valid\
		\cf0 takes input from get_move and sets valid to true/false \{\} .format()\
		if invalid call show_invalid \
		returns to show_turn\
			\cf4 See if valid equals True if input was a valid move\
			See if valid equals False if input was invalid\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs26 \cf2 \
	
\fs24 \cf3 give_changed_board\
		\cf0 if valid move, sends info to update_board\cf3 \
		\cf0 gives input to change_board in model\
			\cf4 See if input will change list\cf3 \
		\
\
\
\
\
[o] [_] [_] [ ] [ ] [ ] [ ]\
[ ] [x ] [ ] [ ] [ ] [ ] [ ]\
[x] [ ] [ ] [ ] [ ] [ ] [ ]\
[ ] [ ] [ ] [ ] [ ] [ ] [ ]\
[ ] [ ] [ ] [ ] [ ] [ ] [ ]\
\
\
\
\
|_||_||_||_||_||_||_|\
|_||_||_||_||_||_||_|\
|_||_||_||_||_||_||_|\
|_||_||_||_||_||_||_|\
|_||_||x||_||_||_||_|\
|x||o||o||o||x||_||_|\
\
\
\
\
\
\
\
\
}